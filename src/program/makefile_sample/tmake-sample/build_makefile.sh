#!/bin/sh

# Define the program version
MAJOR=1 
MINOR=0
REVER=0

# Get current project path and name
PROJ_PATH=`pwd`
PROJ_NAME=`basename $PROJ_PATH`

MAKEFILE=makefile

PRJ_LDFLAGS="-lpthread"
PRJ_CFLAGS="-Werror"

echo "This shell scrtip used to generate makefile for \"$PROJ_NAME\""

# Translate lowercase to capital letter, such as change l100 to L100
DEV_NAME=`echo $1 | tr "[a-z]" "[A-Z]"`
echo "========================================================================="
echo "+ Generate $PROJ_NAME $MAKEFILE for $DEV_NAME"
echo "========================================================================="
echo ""

# Make clean and remove orignal makefile and tmake project file
if [ -f $MAKEFILE ] ; then
    make clean
fi
rm -f $MAKEFILE  ${PROJ_NAME}.pro

function add_version_target()
{
   #Add MAJOR,MINOR,REVER define, which get from the top define
   line=`sed -n '/Compiler, tools and options/=' $MAKEFILE`
   sed -i -e `expr $line + 1`a"MAJOR  = $1" $MAKEFILE
   sed -i -e `expr $line + 2`a"MINOR  = $2" $MAKEFILE
   sed -i -e `expr $line + 3`a"REVER  = $3" $MAKEFILE
   sed -i -e `expr $line + 4`a"\\\n" $MAKEFILE

   #Add make version action
   line=`sed -n '/tmake: makefile/=' $MAKEFILE`
   sed -i -e `expr $line + 1`a"version:" $MAKEFILE
   sed -i -e `expr $line + 2`a"\\\t@echo \"/* Generated by makefile, don't Edit it by hand */\" > version.h" $MAKEFILE
   sed -i -e `expr $line + 3`a"\\\t@echo \"#define MAJOR ${MAJOR}\" >>version.h" $MAKEFILE
   sed -i -e `expr $line + 4`a"\\\t@echo \"#define MINOR ${MINOR}\" >>version.h" $MAKEFILE
   sed -i -e `expr $line + 5`a"\\\t@echo \"#define REVER ${REVER}\" >>version.h" $MAKEFILE
   sed -i -e `expr $line + 6`a"\\\t@if [ -f .svn/entries ] ; then \\\\" $MAKEFILE
   sed -i -e `expr $line + 7`a"\\\t   echo \"#define SVNVER \`sed -n -e 11p .svn/entries\`\" >>version.h; \\\\" $MAKEFILE
   sed -i -e `expr $line + 8`a"\\\telse \\\\" $MAKEFILE
   sed -i -e `expr $line + 9`a"\\\t   echo \"#define SVNVER 0\" >>version.h; \\\\" $MAKEFILE
   sed -i -e `expr $line + 10`a"\\\tfi;" $MAKEFILE
   sed -i -e `expr $line + 11`a"\\\n" $MAKEFILE
}

#Add addition cross compile CFLAGS and LDFLAGS 
function add_compile_flags()
{
   line=`sed -n '/CFLAGS	=/=' $MAKEFILE`
   sed -i -e `expr $line`a"CFLAGS  +=	$PRJ_CFLAGS" $MAKEFILE

   line=`sed -n '/LFLAGS	=/=' $MAKEFILE`
   sed -i -e `expr $line`a"LFLAGS  +=	$PRJ_LDFLAGS" $MAKEFILE
}

#Add addition make clean action
function add_clean_action()
{
   line=`sed -n '/clean:/=' $MAKEFILE`
   sed -i -e `expr $line`a"\\\t\$(REMOVE) *.gdb version.h" $MAKEFILE

   line=`sed -n '/dist:/=' $MAKEFILE`
   sed -i -e ${line}s"/.*/distclean: clean/" $MAKEFILE
   sed -i -e `expr $line`a"\\\t\$(REMOVE) $MAKEFILE ${PROJ_NAME}.pro" $MAKEFILE
}

# Generate the tmake project file
progen -o ${PROJ_NAME}.pro

# Update the TMAKEPATH, tmake command will use our project
export TMAKEPATH=/usr/local/bin/tmake-2.12/lib/ghl/linux-${ARCH}-gcc/

# Generate the makefile
tmake CONFIG+=noqt CONFIG+=nox11 CLEAN_FILES="*.gdb" ALL_DEPS=version \
      DEFINES=$DEV_NAME INCLUDEPATH=$PROJ_PATH \
      ${PROJ_NAME}.pro -o $MAKEFILE

# Modify makefile
add_version_target $MAJOR $MINOR $REVER
add_compile_flags
add_clean_action

# Cross compile the project
#make



