#!/bin/sh
# FILE:/usr/sbin/ifup-wlan0
# Copyright (C) 2011 GuoWenxue <guowenxue@gmail.com QQ:281143292>
# This file used to configure the specified network interface device

source /etc/profile  

if [ -z "$network_cfg_dir" ];  then
   export network_cfg_dir=/apps/etc/network
fi

DEVICE=${1}

[ -z "${DEVICE}" ] && {
   echo $"Usage: $0 <device name>" >&2
   exit 1
}

if [ ! -d $network_cfg_dir -o ! -f "$network_cfg_dir/ifcfg-${DEVICE}" ]; then 
   echo "$0: configuration<$network_cfg_dir/ifcfg-${DEVICE}> not found." >&2 
   echo "Usage: $0 <device name>" >&2 
   exit 1
fi

if [ ! -d /sys/class/net/$DEVICE/ ] ; then
   echo  "Wireless network adapter $DEVICE dosn't exist, exit now..."
   exit
fi

cd $network_cfg_dir
. ifcfg-${DEVICE}

WORKMODE=$(echo $WORKMODE | awk '{ print toupper($0) }')
if [ $WORKMODE != "STA" ] ; then
   WORKMODE="AP"
fi

echo "Enable network interface $DEVICE[$NAME] work on $WORKMODE mode." >&2 

parser_ip()
{
   unset ipaddr netmask
   ipaddr=$(eval "echo \$IPADDR_$WORKMODE")
   netmask=$(eval "echo \$NETMASK_$WORKMODE")
}

stop_wifi_worker()
{
   #stop DHCP work on this NIC
   dhcp_pid=`ps | grep -v grep | grep "dhcp" | grep $DEVICE | awk '{print $1;}'`
   if [ -n "$dhcp_pid" ] ; then
       kill $dhcp_pid
   fi
   ifconfig $DEVICE 0.0.0.0
  
   #Stop wpa_supplicant work on STA mode
   pid=`ps | grep -v grep | grep "wpa_supplicant" | grep $DEVICE | awk '{print $1;}'`
   if [ -n "$pid" ] ; then
       kill $pid
       sleep 1
   fi

   if [ -d /var/run/wpa_supplicant ] ; then
       rm -rf /var/run/wpa_supplicant
   fi
  
   #Stop hostapd work on AP mode
   pid=`ps | grep -v grep | grep "hostapd" | awk '{print $1;}'`
   if [ -n "$pid" ] ; then
       kill $pid
       sleep 1
   fi

   if [ -d /var/run/hostapd ] ; then
       rm -rf /var/run/hostapd
   fi
}


configure_wifi_sta()
{
   parser_ip
  
   #If enable DHCP configure or IP address not configured, then use DHCP get IP address and exit
   if [ -n "$BOOTPROTO" -o -z "$ipaddr" ]; then
      BOOTPROTO=$(echo $BOOTPROTO | awk '{ print toupper($0) }')
      if [ "$BOOTPROTO" = "DHCP" ] ; then
          ifconfig $DEVICE up  
          
          #Start wpa_supplicant to work now
          /apps/tools/wpa_supplicant -B -Dwext -i$DEVICE -c${network_cfg_dir}/wpa_supplicant.conf
          udhcpc -i $DEVICE &
          exit
      fi
   fi
  
   # Calculate the network configuration value
   if [ -z "${netmask}" ] ; then 
     eval $(/bin/ipcalc --netmask ${ipaddr}) 
   fi
  
   #Configure for the WiFi interface IP address and bring up it
   ifconfig $DEVICE $ipaddr netmask $netmask up
   
   #Set the default route
   DEFROUTE=$(echo $DEFROUTE | awk '{ print toupper($0) }')
   if [ -n "$GATEWAY" -a "$DEFROUTE" = "YES" ]; then
      #ip route add  ${NETWORK}/${PREFIX} via $GATEWAY > /dev/null 2>&1
      ip route replace default via $GATEWAY
   fi
   
   #Start wpa_supplicant to work now
   mkdir -p /var/run/wpa_supplicant
   /apps/tools/wpa_supplicant -B -Dwext -i$DEVICE -c${network_cfg_dir}/wpa_supplicant.conf
}

configure_wifi_ap()
{
   parser_ip
   
   #Configure for the WiFi interface IP address and bring up it
   if [ -z "$ipaddr" ] ; then
      ipaddr=192.168.1.2
      netmask=255.255.255.0
   fi
   ifconfig $DEVICE $ipaddr netmask $netmask up
   
   #Enable DHCP server
   DHCP_SERVER=$(echo $DHCP_SERVER | awk '{ print toupper($0) }')
   if [ -n "$DHCP_SERVER" -a "$DHCP_SERVER" = "YES" ]; then
       conf_file="/tmp/dhcpd_${DEVICE}.conf" 
       lease_file="/tmp/dhcpd_${DEVICE}.leases"
       pid_file="/var/run/dhcpd_${DEVICE}.pid" 
       
       DHCP_SUBNET=`ipcalc -n $DHCP_START_IP $DHCP_NETMASK | awk -F "=" '{print $ 2}`
       
       echo "subnet $DHCP_SUBNET netmask $DHCP_NETMASK { " > $conf_file
       echo "  range $DHCP_START_IP $DHCP_END_IP;" >> $conf_file
       echo "  option domain-name-servers $DHCP_DNS1, $DHCP_DNS2;" >> $conf_file
       echo "  option routers $DHCP_GATEWAY;" >> $conf_file
       echo "  default-lease-time $DHCP_LEASE;" >> $conf_file
       echo "  max-lease-time 72000;" >> $conf_file
       echo "  authoritative;" >> $conf_file
       echo "}" >> $conf_file
       
       touch $lease_file
       dhcpd -q -pf $pid_file -cf $conf_file -lf $lease_file $DEVICE
   fi
  
   # Start hostapd to server on AP mode
   mkdir -p /var/run/hostapd
   /apps/tools/hostapd -B ${network_cfg_dir}/hostapd.conf
}

if [ $WORKMODE == "STA" ]; then
   stop_wifi_worker
   configure_wifi_sta
else    
   stop_wifi_worker
   configure_wifi_ap
fi

